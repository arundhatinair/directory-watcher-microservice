package com.example.filewatcher;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.time.Duration;
import java.util.Set;

import org.springframework.boot.devtools.filewatch.ChangedFile;
import org.springframework.boot.devtools.filewatch.ChangedFiles;
import org.springframework.boot.devtools.filewatch.FileChangeListener;
import org.springframework.boot.devtools.filewatch.FileSystemWatcher;
import org.springframework.stereotype.Component;

import jakarta.annotation.PostConstruct;

@Component
public class DirectoryWatcher {

    private final FileWatcherProperties properties;

    public DirectoryWatcher(FileWatcherProperties properties) {
        this.properties = properties;
    }

    @PostConstruct
    public void watch() {
        FileSystemWatcher watcher = new FileSystemWatcher(
            properties.isDaemon(),
            properties.getPollInterval(),
            Duration.ofSeconds(properties.getQuietPeriod())
        );

        File watchDir = new File(properties.getDirectory());
        watcher.addSourceDirectory(watchDir);

        watcher.addListener(new FileChangeListener() {
            @Override
            public void onChange(Set<ChangedFiles> changeSet) {
                for (ChangedFiles changedFiles : changeSet) {
                    for (ChangedFile changedFile : changedFiles.getFiles()) {
                        if (changedFile.getType() == ChangedFile.Type.ADD) {
                            System.out.println("New file detected: " + changedFile.getFile().getName());
                            handleCsv(changedFile.getFile());
                        }
                    }
                }
            }
        });

        watcher.start();
    }

    private void handleCsv(File file) {
        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            reader.readLine(); // Skip CSV header
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                Customer customer = new Customer(data[0], data[1], data[2], data[3], data[4]);
                System.out.println("Customer: " + customer);
            }

            // Move processed file to "processed" folder
            Path processedPath = Paths.get(file.getParent(), "processed", file.getName());
            Files.createDirectories(processedPath.getParent());
            Files.move(file.toPath(), processedPath, StandardCopyOption.REPLACE_EXISTING);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
